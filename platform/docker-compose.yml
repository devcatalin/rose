networks:
  web:
    name: web
    driver: bridge

services:
  traefik:
    image: traefik:3.5.3
    profiles: ["external"]
    container_name: traefik
    restart: unless-stopped
    networks:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/hub-volume/traefik/acme:/letsencrypt
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
    command:
      # Global
      - --global.sendAnonymousUsage=false
      # API and Dashboard (disabled)
      - --api.dashboard=false
      # Ping endpoint for healthcheck
      - --ping=true
      # Docker provider
      - --providers.docker=true
      - --providers.docker.network=web
      - --providers.docker.exposedByDefault=false
      # File provider for dynamic config (optional)
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      # ACME (Let's Encrypt)
      - --certificatesresolvers.myresolver.acme.email=askdevhow@gmail.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  dashy:
    image: lissy93/dashy:3.1.0
    profiles: ["external"]
    container_name: dashy
    restart: unless-stopped
    networks:
      - web
    volumes:
      - ./services/dashy/conf.yml:/app/user-data/conf.yml:ro
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashy.rule=Host(`hub.devcatalin.com`)"
      - "traefik.http.routers.dashy.entrypoints=websecure"
      - "traefik.http.routers.dashy.tls=true"
      - "traefik.http.routers.dashy.tls.certresolver=myresolver"
      - "traefik.http.services.dashy.loadbalancer.server.port=8080"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:8080', (r) => {process.exit(r.statusCode === 200 ? 0 : 1);})",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  cms-database:
    image: postgis/postgis:13-master
    profiles: ["external"]
    container_name: cms-database
    restart: unless-stopped
    networks:
      - web
    volumes:
      - /mnt/hub-volume/directus/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "directus"
      POSTGRES_PASSWORD: "${CMS_DB_PASSWORD}"
      POSTGRES_DB: "directus"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "pg_isready", "--host=localhost", "--username=directus"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  cms-cache:
    image: redis:6
    profiles: ["external"]
    container_name: cms-cache
    restart: unless-stopped
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  cms:
    image: directus/directus:11.3.3
    profiles: ["external"]
    container_name: cms
    restart: unless-stopped
    networks:
      - web
    volumes:
      - /mnt/hub-volume/directus/uploads:/directus/uploads
      - /mnt/hub-volume/directus/extensions:/directus/extensions
    depends_on:
      cms-database:
        condition: service_healthy
      cms-cache:
        condition: service_healthy
    environment:
      SECRET: "${CMS_SECRET}"

      DB_CLIENT: "pg"
      DB_HOST: "cms-database"
      DB_PORT: "5432"
      DB_DATABASE: "directus"
      DB_USER: "directus"
      DB_PASSWORD: "${CMS_DB_PASSWORD}"

      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://cms-cache:6379"

      ADMIN_EMAIL: "${CMS_ADMIN_EMAIL}"
      ADMIN_PASSWORD: "${CMS_PASSWORD}"

      PUBLIC_URL: "https://cms.devcatalin.com"

      # CORS Configuration
      CORS_ENABLED: "true"
      CORS_ORIGIN: "true"
      CORS_CREDENTIALS: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cms.rule=Host(`cms.devcatalin.com`)"
      - "traefik.http.routers.cms.entrypoints=websecure"
      - "traefik.http.routers.cms.tls=true"
      - "traefik.http.routers.cms.tls.certresolver=myresolver"
      - "traefik.http.services.cms.loadbalancer.server.port=8055"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  floraria-hortensia:
    build:
      context: ../websites/floraria_hortensia
      dockerfile: Dockerfile
    profiles: ["build"]
    image: floraria-hortensia:latest
    container_name: floraria-hortensia
    restart: unless-stopped
    environment:
      VITE_DIRECTUS_URL: "https://cms.devcatalin.com"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.floraria-hortensia.rule=Host(`floraria-hortensia.devcatalin.com`)"
      - "traefik.http.routers.floraria-hortensia.entrypoints=websecure"
      - "traefik.http.routers.floraria-hortensia.tls=true"
      - "traefik.http.routers.floraria-hortensia.tls.certresolver=myresolver"
      - "traefik.http.services.floraria-hortensia.loadbalancer.server.port=80"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pizza-gioco:
    build:
      context: ../websites/pizza_gioco
      dockerfile: Dockerfile
    profiles: ["build"]
    image: pizza-gioco:latest
    container_name: pizza-gioco
    restart: unless-stopped
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pizza-gioco.rule=Host(`pizza-gioco.devcatalin.com`)"
      - "traefik.http.routers.pizza-gioco.entrypoints=websecure"
      - "traefik.http.routers.pizza-gioco.tls=true"
      - "traefik.http.routers.pizza-gioco.tls.certresolver=myresolver"
      - "traefik.http.services.pizza-gioco.loadbalancer.server.port=80"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
